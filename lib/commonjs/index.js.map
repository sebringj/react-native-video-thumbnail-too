{"version":3,"sources":["index.tsx"],"names":["LINKING_ERROR","Platform","select","ios","default","VideoThumbnailToo","NativeModules","Proxy","get","Error","extractThumbnail","params","videoFilePath","imageType","timeInMilliseconds","quality","Promise","resolve","reject","uri","Image","getSize","width","height","err"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,aAAa,GAChB,2FAAD,GACAC,sBAASC,MAAT,CAAgB;AAAEC,EAAAA,GAAG,EAAE,gCAAP;AAAyCC,EAAAA,OAAO,EAAE;AAAlD,CAAhB,CADA,GAEA,sDAFA,GAGA,6CAJF;AAMA,MAAMC,iBAAiB,GAAGC,2BAAcD,iBAAd,GACtBC,2BAAcD,iBADQ,GAEtB,IAAIE,KAAJ,CACE,EADF,EAEE;AACEC,EAAAA,GAAG,GAAG;AACJ,UAAM,IAAIC,KAAJ,CAAUT,aAAV,CAAN;AACD;;AAHH,CAFF,CAFJ;AAWA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASU,gBAAT,CAA0BC,MAA1B,EASJ;AACD,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,SAAS,GAAG,KAA7B;AAAoCC,IAAAA,kBAAkB,GAAG,CAAzD;AAA4DC,IAAAA,OAAO,GAAG;AAAtE,MAA8EJ,MAApF;AACA,SAAO,IAAIK,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5C,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMd,iBAAiB,CAACK,gBAAlB,CAAmCE,aAAnC,EAAkDE,kBAAlD,EAAsED,SAAtE,EAAiFE,OAAjF,CAAlB;;AACAK,yBAAMC,OAAN,CAAcF,GAAd,EAAmB,CAACG,KAAD,EAAQC,MAAR,KAAmB;AACpCN,QAAAA,OAAO,CAAC;AACNK,UAAAA,KADM;AACCC,UAAAA,MADD;AACSJ,UAAAA;AADT,SAAD,CAAP;AAGD,OAJD,EAIGK,GAAG,IAAI;AACRN,QAAAA,MAAM,CAACM,GAAD,CAAN;AACD,OAND;AAOD,KATD,CASE,OAAOA,GAAP,EAAY;AACZN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACD;AACF,GAbM,CAAP;AAcD","sourcesContent":["import { NativeModules, Platform, Image } from 'react-native';\n\nconst LINKING_ERROR =\n  `The package 'react-native-video-thumbnail-too' doesn't seem to be linked. Make sure: \\n\\n` +\n  Platform.select({ ios: \"- You have run 'pod install'\\n\", default: '' }) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo managed workflow\\n';\n\nconst VideoThumbnailToo = NativeModules.VideoThumbnailToo\n  ? NativeModules.VideoThumbnailToo\n  : new Proxy(\n      {},\n      {\n        get() {\n          throw new Error(LINKING_ERROR);\n        },\n      }\n    );\n\n/**\n * \n * @param videoFilePath \n * @param timeInMilliseconds \n * @returns\n */\nexport function extractThumbnail(params: {\n  videoFilePath: string,\n  imageType?: 'jpg' | 'png'\n  timeInMilliseconds?: number,\n  quality?: number\n}): Promise<{\n  width: number;\n  height: number;\n  uri: string;\n}> {\n  const { videoFilePath, imageType = 'jpg', timeInMilliseconds = 0, quality = 100 } = params\n  return new Promise(async (resolve, reject) => {\n    try {\n      const uri = await VideoThumbnailToo.extractThumbnail(videoFilePath, timeInMilliseconds, imageType, quality)\n      Image.getSize(uri, (width, height) => {\n        resolve({\n          width, height, uri\n        })\n      }, err => {\n        reject(err)\n      })\n    } catch (err) {\n      reject(err)\n    }\n  })\n}\n"]}